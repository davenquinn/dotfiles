#!/bin/bash

default_keep_pattern='_db\|_cluster\|database'
keep_pattern=${VOLUME_RETENTION_PATTERN:-$default_keep_pattern}

# I would like to use the `--filter` capability for volume
# labels but that would require negative
# filtering to be a thing (it is for containers but not volumes)
#
dry_run=0
[ "$1" == '--dry-run' ] && dry_run=1

all_volumes=$(docker volume ls --format '{{.Name}}')
all_n=$(echo "$all_volumes" | wc -l)

keep_volumes=$(echo "$all_volumes" | grep $keep_pattern)
keep_n=$(echo "$keep_volumes" | wc -l)

# Inverse match grep
filtered_volumes=$(echo "$all_volumes" | grep -v $keep_pattern)
filtered_n=$(echo "$filtered_volumes" | wc -l)


function print-padded() {
  while IFS= read -r line ; do echo "  $line"; done
}

echo $dry_run

if [ $dry_run == 1 ]; then
  echo "Volumes to delete:"
  echo "$filtered_volumes" | print-padded
  echo ""
  echo "Volumes to retain:"
  echo "$keep_volumes" | print-padded
  echo ""
  echo "  You can adjust which volumes are kept by setting"
  echo "  the VOLUME_RETENTION_PATTERN environment variable"
  echo "  (current value: '$keep_pattern')"
  echo ""
  echo "This command will remove $filtered_n of $all_n volumes"
else
  $0 --dry-run
  read -p "Are you sure you want to continue? [yN]: " -r
  echo # (optional) move to a new line
  if [[ $REPLY =~ ^[Yy]$ ]]
  then
    echo $filtered_volumes | xargs docker volume rm
  else
    echo "...Skipping volume deletion"
  fi

  echo ""
  echo "Docker system prune (destroys containers but not data)"
  docker system prune
fi

