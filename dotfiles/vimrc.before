let mapleader = ","

if has('mouse')
  set mouse=a
  if &term =~ "xterm" || &term =~ "screen"
    set ttymouse=xterm2
    " For older versions of vim, remap mouse periodically
    autocmd VimEnter,FocusGained,BufEnter * set ttymouse=xterm2
  endif
endif

" Remaps search highlighting to clear with backslash
nnoremap \ :noh<return><esc>
" Remaps space to the command leader
noremap <space> :

" Easier split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Maps gitgutter staging and undo
nmap <Leader>hs <Plug>GitGutterStageHunk
nmap <Leader>hr <Plug>GitGutterRevertHunk

" NERDTree
ca Tree NERDTreeToggle

" word whitelist
set spellfile=$HOME/.words/en.utf-8.add

" Adds some files to NerdTreeIgnore
let NERDTreeIgnore = ['\.pyc$', '\.pyo$', '\.rbc$', '\.rbo$', '\.class$', '\.o$', '\~$']
let NERDTreeIgnore += ['\.DS_Store$','\.egg-info$[[dir]]','.sass-cache','__pycache__']
"let g:pandoc#modules#disabled = ["folding"]

if v:version < 704
  let g:pandoc#modules#disabled += ["bibliographies","command"]
endif

" VimPad
let g:pad#dir = "~/Documents/vim-notes"
let g:pad#open_in_split = 0
let g:pad#search_backend = "ack"
let g:pad#position = {'list': "full"}
